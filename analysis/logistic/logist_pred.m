function [preds_] = logist_pred(data,fits_,dmat_func,lumode)%% returns predictions from logistic fits (if you didn't bother doing so w/% logist_fit%   fitted values%     lumode, Specifies how the lower and upper asymptotes are dealt with:%               'n'             ... lower=0,   upper=1%               'nk'            ... lower=0.01,upper=0.99%               'l'             ... lower=fit, upper=1%               'u'             ... lower=0,   upper=fit%               'lu1' (default) ... lower=upper=fit%               'lu2'           ... lower=fit, upper=fit%               'lug'           ... lower and upper given (as final argument)%     varargin, Passed to val function%%	Returns values are:%     preds_  ... A vector of the probability of making a correct choice given%                   the fitif ~exist('lumode','var')    lumode = [];enddata = dmat_func(data);% logist_setup does all the work[fun, data, ~] = logist_setup(data, lumode);if size(fits_,1)==1    fits_ = fits_';end    preds_ = feval(fun, fits_, data(:,1:end-1));end